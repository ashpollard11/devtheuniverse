{"version":3,"file":"hamburgers.css","sources":["hamburgers.scss","_base.scss","_minus.scss"],"sourcesContent":["@charset \"UTF-8\";\n/*!\n * Hamburgers\n * @description Tasty CSS-animated hamburgers\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/hamburgers\n * @link https://github.com/jonsuh/hamburgers\n */\n\n// Settings\n// ==================================================\n$hamburger-padding-x                       : 15px !default;\n$hamburger-padding-y                       : 15px !default;\n$hamburger-layer-width                     : 40px !default;\n$hamburger-layer-height                    : 2px !default;\n$hamburger-layer-spacing                   : 6px !default;\n$hamburger-layer-color                     : #fff !default;\n$hamburger-layer-border-radius             : 4px !default;\n$hamburger-hover-opacity                   : 0.7 !default;\n$hamburger-hover-transition-duration       : 0.15s !default;\n$hamburger-hover-transition-timing-function: linear !default;\n\n// To use CSS filters as the hover effect instead of opacity,\n// set $hamburger-hover-use-filter as true and\n// change the value of $hamburger-hover-filter accordingly.\n$hamburger-hover-use-filter: false !default;\n$hamburger-hover-filter    : opacity(50%) !default;\n\n// Types (Remove or comment out what you donâ€™t need)\n// ==================================================\n// $hamburger-types: (\n//   3dx,\n//   3dx-r,\n//   3dy,\n//   3dy-r,\n//   3dxy,\n//   3dxy-r,\n//   arrow,\n//   arrow-r,\n//   arrowalt,\n//   arrowalt-r,\n//   arrowturn,\n//   arrowturn-r,\n//   boring,\n//   collapse,\n//   collapse-r,\n//   elastic,\n//   elastic-r,\n//   emphatic,\n//   emphatic-r,\n//   minus,\n//   slider,\n//   slider-r,\n//   spin,\n//   spin-r,\n//   spring,\n//   spring-r,\n//   stand,\n//   stand-r,\n//   squeeze,\n//   vortex,\n//   vortex-r\n// ) !default;\n\n$hamburger-types: (\n  minus\n) !default;\n\n\n\n// Base Hamburger (We need this)\n// ==================================================\n@import \"base\";\n\n// Hamburger types\n// ==================================================\n// @import \"types/3dx\";\n// @import \"types/3dx-r\";\n// @import \"types/3dy\";\n// @import \"types/3dy-r\";\n// @import \"types/3dxy\";\n// @import \"types/3dxy-r\";\n// @import \"types/arrow\";\n// @import \"types/arrow-r\";\n// @import \"types/arrowalt\";\n// @import \"types/arrowalt-r\";\n// @import \"types/arrowturn\";\n// @import \"types/arrowturn-r\";\n// @import \"types/boring\";\n// @import \"types/collapse\";\n// @import \"types/collapse-r\";\n// @import \"elastic\";\n// @import \"types/elastic-r\";\n// @import \"types/emphatic\";\n// @import \"types/emphatic-r\";\n@import \"minus\";\n// @import \"types/slider\";\n// @import \"types/slider-r\";\n// @import \"types/spin\";\n// @import \"types/spin-r\";\n// @import \"types/spring\";\n// @import \"types/spring-r\";\n// @import \"types/stand\";\n// @import \"types/stand-r\";\n// @import \"types/squeeze\";\n// @import \"types/vortex\";\n// @import \"types/vortex-r\";\n\n// ==================================================\n// Cooking up additional types:\n//\n// The Sass for each hamburger type should be nested\n// inside an @if directive to check whether or not\n// it exists in $hamburger-types so only the CSS for\n// included types are generated.\n//\n// e.g. hamburgers/types/_new-type.scss\n//\n// @if index($hamburger-types, new-type) {\n//   .hamburger--new-type {\n//     ...\n//   }\n// }\n","// Hamburger\n// ==================================================\n.hamburger {\n  padding: $hamburger-padding-y $hamburger-padding-x;\n  display: inline-block;\n  cursor: pointer;\n\n  transition-property: opacity, filter;\n  transition-duration: $hamburger-hover-transition-duration;\n  transition-timing-function: $hamburger-hover-transition-timing-function;\n\n  // Normalize (<button>)\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n\n  &:hover {\n    @if $hamburger-hover-use-filter == true {\n      filter: $hamburger-hover-filter;\n    }\n    @else {\n      opacity: $hamburger-hover-opacity;\n    }\n  }\n}\n\n.hamburger-box {\n  width: $hamburger-layer-width;\n  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;\n  display: inline-block;\n  position: relative;\n}\n\n.hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: $hamburger-layer-height / -2;\n\n  &,\n  &::before,\n  &::after {\n    width: $hamburger-layer-width;\n    height: $hamburger-layer-height;\n    background-color: $hamburger-layer-color;\n    border-radius: $hamburger-layer-border-radius;\n    position: absolute;\n    transition-property: transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n  }\n\n  &::before {\n    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n\n  &::after {\n    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n}\n","@if index($hamburger-types, minus) {\n  /*\n   * Minus\n   */\n  .hamburger--minus {\n    .hamburger-inner {\n      &::before,\n      &::after {\n        transition: bottom 0.08s 0s ease-out,\n                    top 0.08s 0s ease-out,\n                    opacity 0s linear;\n      }\n    }\n\n    &.is-active {\n      .hamburger-inner {\n        &::before,\n        &::after {\n          opacity: 0;\n          transition: bottom 0.08s ease-out,\n                      top 0.08s ease-out,\n                      opacity 0s 0.08s linear;\n        }\n        &::before {\n          top: 0;\n        }\n\n        &::after {\n          bottom: 0;\n        }\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AACA;;;;;;GAMG;ACLH,AAAA,UAAU,CAAC;CACT,OAAO,EDSoC,IAAI,CADJ,IAAI;CCP/C,OAAO,EAAE,YAAY;CACrB,MAAM,EAAE,OAAO;CAEf,mBAAmB,EAAE,eAAe;CACpC,mBAAmB,EDWwB,KAAK;CCVhD,0BAA0B,EDWiB,MAAM;CCRjD,IAAI,EAAE,OAAO;CACb,KAAK,EAAE,OAAO;CACd,cAAc,EAAE,IAAI;CACpB,gBAAgB,EAAE,WAAW;CAC7B,MAAM,EAAE,CAAC;CACT,MAAM,EAAE,CAAC;CACT,QAAQ,EAAE,OAAO;CAUlB;;AA1BD,AAkBE,UAlBQ,AAkBP,MAAM,CAAC;CAKJ,OAAO,EDPgC,GAAG;CCS7C;;AAGH,AAAA,cAAc,CAAC;CACb,KAAK,EDlBsC,IAAI;CCmB/C,MAAM,EAAE,IAA0D;CAClE,OAAO,EAAE,YAAY;CACrB,QAAQ,EAAE,QAAQ;CACnB;;AAED,AAAA,gBAAgB,CAAC;CACf,OAAO,EAAE,KAAK;CACd,GAAG,EAAE,GAAG;CACR,UAAU,EAAE,IAA4B;CA4BzC;;AA/BD,AAKE,gBALc,EAAhB,gBAAgB,AAMb,QAAQ,EANX,gBAAgB,AAOb,OAAO,CAAC;CACP,KAAK,EDhCoC,IAAI;CCiC7C,MAAM,EDhCmC,GAAG;CCiC5C,gBAAgB,ED/ByB,IAAI;CCgC7C,aAAa,ED/B4B,GAAG;CCgC5C,QAAQ,EAAE,QAAQ;CAClB,mBAAmB,EAAE,SAAS;CAC9B,mBAAmB,EAAE,KAAK;CAC1B,0BAA0B,EAAE,IAAI;CACjC;;AAhBH,AAkBE,gBAlBc,AAkBb,QAAQ,EAlBX,gBAAgB,AAmBb,OAAO,CAAC;CACP,OAAO,EAAE,EAAE;CACX,OAAO,EAAE,KAAK;CACf;;AAtBH,AAwBE,gBAxBc,AAwBb,QAAQ,CAAC;CACR,GAAG,EAAE,IAAyD;CAC/D;;AA1BH,AA4BE,gBA5Bc,AA4Bb,OAAO,CAAC;CACP,MAAM,EAAE,IAAyD;CAClE;;AClED;;KAEG;AACH,AAEI,iBAFa,CACf,gBAAgB,AACb,QAAQ,EAFb,iBAAiB,CACf,gBAAgB,AAEb,OAAO,CAAC;CACP,UAAU,EAAE,kEAEiB;CAC9B;;AAPL,AAYM,iBAZW,AAUd,UAAU,CACT,gBAAgB,AACb,QAAQ,EAZf,iBAAiB,AAUd,UAAU,CACT,gBAAgB,AAEb,OAAO,CAAC;CACP,OAAO,EAAE,CAAC;CACV,UAAU,EAAE,kEAEuB;CACpC;;AAlBP,AAmBM,iBAnBW,AAUd,UAAU,CACT,gBAAgB,AAQb,QAAQ,CAAC;CACR,GAAG,EAAE,CAAC;CACP;;AArBP,AAuBM,iBAvBW,AAUd,UAAU,CACT,gBAAgB,AAYb,OAAO,CAAC;CACP,MAAM,EAAE,CAAC;CACV"}